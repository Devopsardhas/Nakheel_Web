
<style>

    #map {
        height: 100%;
    }

    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    .controls {
        background-color: #fff;
        border-radius: 2px;
        border: 1px solid transparent;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        box-sizing: border-box;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        height: 29px;
        margin-left: 17px;
        margin-top: 10px;
        outline: none;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
    }

        .controls:focus {
            border-color: #4d90fe;
        }

    .title {
        font-weight: bold;
    }

    #infowindow-content {
        display: none;
    }

    #map #infowindow-content {
        display: inline;
    }
</style>

<style>
    #map-canvas {
        height: 300px;
        width: 100%;
        border-radius: 14px;
    }

    #search_input {
        font-size: 18px;
        width: 430px;
        height: 40px;
        margin: 10px;
        padding: 10px;
        box-sizing: border-box;
        border-radius: 10px;
        font-family: 'Nakheel-Textregular';
    }

    #search_input_1 {
        font-size: 18px;
        width: 330px;
        height: 40px;
        margin: 10px;
        padding: 10px;
        box-sizing: border-box;
        border-radius: 10px;
        font-family: 'Nakheel-Textregular';
    }
</style>



<div class="row">
    <input type="text" id="search_input" placeholder="Search for a Location" name="Location" />
    <input type="text" id="search_input_1" placeholder="Search for a Exact Location" name="Location" />
    <input type="hidden" value="0.00" id="lat_dynamic" />
    <input type="hidden" value="0.00" id="Long_dynamic" />
    <div id="map-canvas"></div>
</div>
<script>
    if (document.getElementById('map-canvas')) {
        debugger
        var content;
        var latitude = '@ViewBag.lat';
        var longitude = '@ViewBag.longt';
        var exact = '@ViewBag.exact';
        var map;
        var marker;
        var geocoder;
        $("#search_input_1").val(exact);
        navigator.geolocation.getCurrentPosition(loadMap);
        //$("#search_input_1").val(Exact_Location);
        function loadMap(location) {
            if (location.coords) {
                latitude = latitude;
                longitude = longitude;
            }

            // Coordinates to center the map
            var myLatlng = new google.maps.LatLng(latitude, longitude);
            geocoder = new google.maps.Geocoder();
            // Other options for the map, pretty much selfexplanatory
            var mapOptions = {
                zoom: 12,
                center: myLatlng,//new google.maps.LatLng(25.1143122, 55.1387501),
                mapTypeId: google.maps.MapTypeId.PLAN,
            };

            // Attach a map to the DOM Element, with the defined settings
            map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

            content = document.getElementById('information');
            google.maps.event.addListener(map, 'click', function (e) {
                placeMarker(e.latLng);
            });

            var input = document.getElementById('search_input');
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            var input_1 = document.getElementById('search_input_1');
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input_1);

            var searchBox = new google.maps.places.SearchBox(input);
            var image = '../assets/images/mappin.png';
            google.maps.event.addListener(searchBox, 'places_changed', function () {
                var places = searchBox.getPlaces();
                placeMarker(places[0].geometry.location);
            });

            marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                animation: google.maps.Animation.DROP,
                icon: image
            });

        }
        getReverseGeocodingData(latitude, longitude);

    }

    function getReverseGeocodingData(lat, lng) {
        
        var latlng = new google.maps.LatLng(lat, lng);
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode({ 'latLng': latlng }, function (results, status) {
            if (status !== google.maps.GeocoderStatus.OK) {
            }
            if (status == google.maps.GeocoderStatus.OK) {
                console.log(results);
                var address = (results[0].formatted_address);
                $("#search_input").val(address);
                
            }
        });
    }
</script>

