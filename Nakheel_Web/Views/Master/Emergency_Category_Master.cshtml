@model IReadOnlyCollection<Nakheel_Web.Models.Masters.Emergency_Category_Master>;
@{
    ViewData["Title"] = "Emergency Category Master";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .tblround {
        border-collapse: collapse;
        border-radius: 1em;
        overflow: hidden
    }

    .table > :not(caption) > * > * {
        padding: 0.35rem 0.35rem !important;
        background-color: var(--bs-table-bg);
        border-bottom-width: 1px;
        -webkit-box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);
        box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);
    }
</style>
<div class="row" id="Listview">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-lg-10"> <h4 class="card-title">Emergency Category Master List</h4></div>
                    <div class="col-lg-2">
                        <button type="button" class="btn btn-success waves-effect waves-light" id="btnAdd" style="float: right;" data-bs-toggle="modal" data-bs-target=".add-new"><i class="mdi mdi-plus me-1"></i> Add New </button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <table id="MainTable" class="table table-striped dt-responsive nowrap tblround" style="width:100%;">
                    <thead>
                        <tr class="TR_Color">
                            <th style="text-align:left;"><i class="mdi mdi-table-key"></i>&nbsp;Emergency Category Id</th>
                            <th style="text-align:left;"><i class="bx bx-notepad"></i>&nbsp;Emergency Category Name</th>
                            <th style="text-align:left;"><i class="bx bxs-notepad"></i>&nbsp;Created Date</th>
                            <th style="text-align:left;"><i class="bx bxs-zap"></i>&nbsp;Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr class="clstr">
                                    <td align="left" valign="middle">@item.Unique_Id</td>
                                    <td align="left" valign="middle">@item.Emergency_Category_Name</td>
                                    <td align="left" valign="middle">@item.CreatedDate</td>
                                    <td align="left">
                                        <div class="d-flex gap-3">
                                            <a onclick="Edit(@item.Emergency_Category_Id)" href="javascript:void(0);" title="" class="text-success" data-bs-original-title="Edit" aria-label="View"> <i class="mdi mdi-pencil font-size-18"></i></a>
                                            <a onclick="Delete(@item.Emergency_Category_Id)" href="javascript:void(0);" title="" class="text-danger" data-bs-original-title="Delete" aria-label="Delete"><i class="mdi mdi-delete font-size-18"></i></a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@*/*ADD PAGE*/*@

<form id="AddModule_div" asp-controller="Master" asp-action="AddEmergency_Category_Master" method="post">
    <div class="modal fade add-new" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="myExtraLargeModalLabel">Add New </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div style="display:none;">
                            <div class="form-group">
                                <input class="form-control" name="Emergency_Category_Id" id="Emergency_Category_Id" value="0">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label for="example-search-input" style="color:black;" class="form-model">Emergency Category Name</label>
                            <div class="col-md-12">
                                <input class="form-control" type="text" name="Emergency_Category_Name" id="Emergency_Category_Name" required autocomplete="off">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                    </div>
                    <div class="">
                        <div class="col-12 text-end" style="text-align:center;">
                            <button type="submit" class="btn btn-success" id="btn-save-event"> Submit</button>
                        </div>
                    </div>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
</form>

<script>
    "use strict";
    const UI_Fields = Object.freeze({
        MODULE_ID: "#Emergency_Category_Id",
        ADD_MODULE_DIV: "#AddModule_div",
        EMERGENCY_CATEGORY_NAME: "#Emergency_Category_Name",
        DESCRIPTION: "#Description",
        LIST_VIEW: "#List_View",
        MAINTABLE: "#MainTable",
        MAINTABLE_TBODY: "#MainTable_TBODY",
    });

    $(document).ready(function () {
        let msg = '@TempData["Zonemsg"]';
        if (msg != "") {
            debugger
            if (msg == "Added Successful" || msg == "Updated Successfully") {
                Swal.fire({
                    position: 'Center',
                    icon: 'success',
                    title: msg,
                    showConfirmButton: false,
                    timer: 1500
                });
            }
            else {
                Swal.fire({
                    position: 'Center',
                    icon: 'warning',
                    title: msg,
                    showConfirmButton: false,
                    timer: 2000
                });
            }
        }
        $(UI_Fields.MAINTABLE).DataTable({
            "order": [[0, "desc"]],
            "initComplete": function (settings, json) {
                $(UI_Fields.MAINTABLE).wrap("<div class='tableFixHead' style='overflow:auto;min-height:auto;max-height:430px; width:100%;position:relative;'></div>");
            },
            dom: 'lBfrtip',
            buttons: ['excel', 'pdf'],
        });

    });


    $("#btnAdd").click(function () {
        $(UI_Fields.MODULE_ID).val('0');
        $(UI_Fields.EMERGENCY_CATEGORY_NAME).val('');
        $(UI_Fields.DESCRIPTION).val('');
    });

    function Edit(id) {
        $(".add-new").modal('show');
        $.post("@Url.Action("Emergency_Category_GetByID", "Master")", { ID: id }, function (data) {
            $(UI_Fields.MODULE_ID).val(data.Emergency_Category_Id);
            $(UI_Fields.EMERGENCY_CATEGORY_NAME).val(data.Emergency_Category_Name);
            $(UI_Fields.DESCRIPTION).val(data.Description);
        });
    }

    function Delete(id) {
        debugger
        Swal.fire(
            {
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning", showCancelButton: !0,
                confirmButtonColor: "#34c38f",
                cancelButtonColor: "#f46a6a",
                confirmButtonText: "Yes, delete it!"
            }).then(function (t) {
                debugger
                if (t.isConfirmed) {
                    $.ajax({
                        url: '@Html.Raw(@Url.Action("Emergency_Category_Delete", "Master"))',
                        type: "POST",
                        cache: false,
                        async: false,
                        data: { ID: id },
                        dataType: "json",
                        success: function (data) {
                            debugger
                            if (data == true) {
                                Swal.fire("Deleted!", "Your file has been deleted.", "success");
                                window.location.reload();
                            }
                            else {
                                Swal.fire("Failed!", "Something went wrong", "error");
                            }
                        },
                    });
                }
            });
    }
</script>






